import configargparse

def config_parser():
    parser = configargparse.ArgumentParser()
    
    # Basic arguments (from train_nerf_depth.py)
    parser.add_argument("-f", "--fff", help="a dummy argument to fool ipython", default="1")
    parser.add_argument("--device", type=int, default=0, help='CUDA_VISIBLE_DEVICES')
    parser.add_argument("--multi_gpu", action='store_true', help='use multiple gpu on the server')
    parser.add_argument('--config', is_config_file=True, default='script/config_mink.txt',
                        help='config file path')
    parser.add_argument('--finetune_unlabel', action='store_true', default=False,help='finetune unlabel data')
    parser.add_argument('--render_video_train', type=bool, default=False, help='render video train')
    # Path-related parameters (from train_nerf_depth.py)
    parser.add_argument('--pretrain_model_path', type=str, default='./logs/minkloc_multimodal/best_model.pth')
    parser.add_argument('--nerf_model_path', type=str, default='./logs/paper_models/NeRF_Heads/004000.tar')
    parser.add_argument('--basedir', type=str, default='./logs')
    parser.add_argument('--model_name', type=str, default='minkloc_multimodal')
    parser.add_argument('--expname', type=str, default='NeRF_Heads')
    parser.add_argument('--datadir', type=str, default='../data/7Scenes/heads')
    
    # Dataset parameters (from train_nerf_depth.py)
    parser.add_argument('--dataset_type', type=str, default='7Scenes')
    parser.add_argument('--no_batching', action='store_true')
    parser.add_argument('--use_viewdirs', action='store_true')
    parser.add_argument('--trainskip', type=int, default=5)
    parser.add_argument('--testskip', type=int, default=1)
    parser.add_argument('--half_res', action='store_true')
    parser.add_argument('--df', type=float, default=1.)
    parser.add_argument('--pose_scale', type=float, default=1)
    parser.add_argument('--near_far', type=float, nargs='+', default=[0.5, 2.5])
    parser.add_argument('--load_pose_avg_stats', action='store_true')
    
    # NeRF model parameters (from train_nerf_depth.py)
    parser.add_argument('--N_samples', type=int, default=64)
    parser.add_argument('--netwidth', type=int, default=128)
    parser.add_argument('--N_rand', type=int, default=1536)
    parser.add_argument('--netdepth', type=int, default=8)
    parser.add_argument('--netdepth_fine', type=int, default=8)
    parser.add_argument('--netwidth_fine', type=int, default=128)
    parser.add_argument('--lrate', type=float, default=5e-4)
    parser.add_argument('--lrate_decay', type=float, default=250, help='exponential learning rate decay (in 1000 steps)')
    parser.add_argument('--chunk', type=int, default=1024*32)
    parser.add_argument('--netchunk', type=int, default=1024*64)
    parser.add_argument('--no_reload', action='store_true')
    parser.add_argument('--ft_path', type=str, default=None)
    parser.add_argument('--N_importance', type=int, default=64)
    parser.add_argument('--perturb', type=float, default=1.)
    parser.add_argument('--i_embed', type=int, default=0)
    parser.add_argument('--multires_views', type=int, default=4)
    parser.add_argument('--raw_noise_std', type=float, default=0.)
    parser.add_argument('--render_factor', type=int, default=0)
    parser.add_argument('--white_bkgd', action='store_true')
    parser.add_argument('--precrop_iters', type=int, default=0)
    parser.add_argument('--precrop_frac', type=float, default=.5)
    parser.add_argument('--spherify', action='store_true')
    parser.add_argument('--llffhold', type=int, default=8)
    parser.add_argument('--no_ndc', action='store_true')
    parser.add_argument('--lindisp', action='store_true')
    parser.add_argument('--factor', type=int, default=8)
    parser.add_argument('--no_bd_factor', action='store_true')
    
    # Training parameters (from train_nerf_depth.py)
    parser.add_argument('--continue_training', action='store_true',default=False)
    parser.add_argument('--learning_rate', type=float, default=0.00001)
    parser.add_argument('--max_epochs', type=int, default=1000)
    parser.add_argument('--patience', type=int, nargs='+', default=[200, 50])
    parser.add_argument('--combine_loss', action='store_true')
    parser.add_argument('--combine_loss_w', type=float, nargs='+', default=[0.7, 0.3])
    parser.add_argument('--render_video_test', action='store_true')
    parser.add_argument('--no_DNeRF_viewdir', action='store_true')
    parser.add_argument('--render_test', action='store_true')
    parser.add_argument('--batch_size', type=int, default=32, help='batch size for training')
    parser.add_argument('--pose_only', type=int, default=2, help='pose only mode')
    
    # NeRF-W specific parameters (from train_nerf_depth.py)
    parser.add_argument('--NeRFH', action='store_true',default=True)
    parser.add_argument('--encode_hist', action='store_true',default=True)
    parser.add_argument('--N_vocab', type=int, default=1000)
    parser.add_argument('--in_channels_a', type=int, default=50)
    parser.add_argument('--in_channels_t', type=int, default=20)
    parser.add_argument('--no_grad_update', action='store_true',default=False)
    
    # Embedding parameters (from train_nerf_depth.py)
    parser.add_argument('--reduce_embedding', type=int, default=-1)
    parser.add_argument('--epochToMaxFreq', type=int, default=-1)
    parser.add_argument('--multires', type=int, default=10)
    
    # Logging parameters (from train_nerf_depth.py)
    parser.add_argument('--i_weights', type=int, default=200)
    parser.add_argument('--i_print', type=int, default=1)
    parser.add_argument('--i_testset', type=int, default=200)
    parser.add_argument('--i_eval', type=int, default=1, help='evaluation interval')
    
    # Additional parameters from config files
    parser.add_argument("--render_pose_only", action='store_true', help='render a spiral video for 7 Scene')
    parser.add_argument("--save_pose_avg_stats", action='store_true',
                        help='save a pose avg stats to unify NeRF, posenet, direct-pn training')
    parser.add_argument("--train_local_nerf", type=int, default=-1,
                        help='train local NeRF with ith training sequence only, ie. Stairs can pick 0~3')
    parser.add_argument("--frustum_overlap_th", type=float, help='frustsum overlap threshold')
    parser.add_argument("--load_unique_view_stats", action='store_true', help='load unique views frame index')
    parser.add_argument("--fix_index", action='store_true', help='fix training frame index as 0')
    parser.add_argument("--hist_bin", type=int, default=10, help='image histogram bin size')
    parser.add_argument("--use_ROI", action='store_true', help='use ROI sampling')
    parser.add_argument('--ROI_schedule_head', type=float, default=0.0)
    parser.add_argument('--ROI_schedule_tail', type=float, default=0.05)
    parser.add_argument("--mesh_only", action='store_true',
                        help='do not optimize, reload weights and save mesh to a file')
    parser.add_argument("--mesh_grid_size", type=int, default=80,
                        help='number of grid points to sample in each dimension for marching cubes')
    parser.add_argument('--sine_weights_layers0', nargs='+', type=int, default=[30, 1, 1, 1])
    parser.add_argument('--sine_weights_layers1', nargs='+', type=int, default=[1, 1, 1, 1])
    parser.add_argument('--den_mag', type=float, default=30.0)  # 25.0 seems ok
    parser.add_argument('--rgb_mag', type=float, default=1.0)
    parser.add_argument("--i_img", type=int, default=500, help='frequency of tensorboard image logging')
    parser.add_argument("--i_video", type=int, default=50000, help='frequency of render_poses video saving')
    
    return parser 